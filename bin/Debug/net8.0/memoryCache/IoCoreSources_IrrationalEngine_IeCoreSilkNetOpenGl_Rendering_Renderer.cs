{"embedding":[-0.008562562,-0.015845424,-0.017570864,-0.03058368,0.0079411315,-0.034544468,-0.026069416,-0.036148906,0.042389184,0.025397774,-0.0009006876,-0.018721875,0.04417836,-0.066138566,-0.0065281023,0.010063215,-0.023937847,-0.036570255,-0.078631334,0.0035547458,0.027521418,0.015072444,-0.08242966,-0.04169795,-0.035656944,0.01832834,0.030440513,0.001208675,0.03345481,0.020337332,-0.048473865,0.015069768,0.007857907,-0.028130384,-0.0031694563,0.011725811,0.028595775,-0.0129694715,-0.009534957,-0.009945622,0.061093412,-0.025894174,0.04021846,-0.06939753,-0.03114575,-0.029338144,0.006094008,-0.028525556,0.023245055,-0.033153277,0.0017160128,0.019601393,-0.016593613,-0.01876294,-0.023760898,-0.030092297,0.0085849175,-0.0016423423,-0.010446792,0.00010757888,0.035265952,0.02441928,-0.018971581,-0.047314342,0.06520976,0.03886162,0.011792901,0.020324616,-0.0028323403,0.01902277,-0.050348494,0.051239274,0.008706387,-0.0038602313,-0.02797835,0.011992836,-0.008046233,0.026185969,-0.0009214493,-0.0020763078,-0.024678394,0.026811324,-0.020883277,-0.004502276,-0.030613996,-0.005811118,0.0026047267,0.005807022,-0.010268063,-0.03587132,-0.030000659,0.050073348,-0.015724257,0.035515327,0.023950318,0.038437456,-0.02968651,0.033571392,0.012225616,-0.007429219,0.023933003,0.08625651,-0.058512587,0.028760228,-0.011566994,-0.0036474857,0.013866376,0.014791465,-0.059814483,-0.05933526,0.06120168,-0.0004532959,0.020071523,0.0020866254,0.014172615,0.037066314,0.032711186,0.0016118459,-0.033642933,-0.00459356,0.055350047,-0.04016796,0.024455184,-0.070913844,0.0009953222,0.005325257,0.07053997,0.053035703,-0.0335231,-0.006517187,0.030140854,0.0034684485,0.003562843,0.052987657,-0.070274554,0.011419449,0.03204356,0.01330743,0.027568191,-0.011794393,0.015526901,0.00015863264,-0.018091049,0.07390588,0.011951307,0.007773736,0.0043644775,0.012273297,-0.04751125,0.0063973772,-0.04465912,-0.0020736682,-0.0015739779,0.024318207,0.0073083807,-0.010373177,-0.019247107,0.0317475,0.020876281,-0.022010366,0.07095112,0.0034733794,-0.036612514,0.029731313,0.013676318,0.048161197,-0.043753605,-0.051440317,-0.0010107973,0.008187488,0.03703691,-0.013292546,0.0043898406,-0.019297617,0.036591604,0.0041115372,0.024674622,0.027397925,-0.004790093,0.014408754,0.0036177791,-0.002378368,0.0040542693,0.051784076,0.003525791,0.023685774,0.03257699,-0.018591553,-0.054759186,0.002464188,0.03514212,0.05308369,0.0034929912,0.05219875,-0.023835765,0.025644233,-0.035783216,-0.009345699,-0.052298054,-0.07240261,0.02104046,0.006600858,-0.023948278,-0.0245024,0.0018011425,-0.013913886,0.032595273,0.06684676,-0.001641268,0.018832881,0.039434906,0.011107306,-0.039361488,-0.0017148368,0.033776652,-0.024285391,-0.011745781,0.023023034,-0.0014584091,0.04323343,0.02210196,0.019118112,0.01585161,0.036800887,-0.018143954,5.5089244E-05,-0.00016663322,-0.026367983,0.010136253,-0.010588645,-0.0049196123,0.02004572,-0.0038556082,0.044737227,-0.004939869,0.025188852,0.009062674,-0.012705572,-0.014843349,0.0021770964,-0.021430837,0.009029625,-0.012109904,0.022750469,0.016218793,-0.025969656,0.004004935,-0.038201544,0.0062921243,0.0027921118,-0.018304996,0.06662282,0.01730941,-0.024741462,-0.048267018,-0.0491792,0.026301552,0.02097012,-0.029221926,-0.04638878,0.019292127,0.032980476,-0.013703585,-0.0029479142,0.01770299,0.057053193,-0.008663328,-0.0024321352,-0.024824813,-0.025270341,-0.051096555,-0.020332504,-0.06420168,0.022541659,-0.018123798,0.0043262593,0.044242855,-0.052924085,0.032809608,0.0120373815,0.013974504,-0.042884823,-0.03952223,0.022063281,0.034672223,0.015906176,0.013949606,0.016626537,-0.015497859,-0.017380854,-0.06780849,-0.011990985,0.015519842,0.013992638,0.0031099666,-0.05656235,-0.0046998393,-0.05178389,-0.014715715,-0.0011019536,-0.0230238,-0.027400667,-0.036577597,0.0030904782,-0.02309243,0.04722908,0.018398061,-0.006638188,0.037456416,0.03555037,-0.05782122,0.0008721487,-0.016350532,-0.003392987,-0.041478556,0.03138397,0.03894718,-0.030154381,-0.030313354,-0.019537108,-0.0015122935,0.00034467198,-0.039472066,-0.04467586,-0.036083195,0.038305677,0.026546575,-0.040627,0.0053144405,-0.036940355,-0.012863859,-0.0253458,-0.015825752,0.04480282,-0.00091894326,0.057017177,0.005970823,0.0038871118,0.012947611,-0.015380859,0.02777952,-0.037796114,0.03729593,0.03403801,-0.03256742,0.016528724,0.02933143,-0.04569924,0.025800651,-0.028274624,-0.029740123,-0.02307246,-0.01912595,-0.0058420417,0.010397537,0.029673554,-0.023982083,-0.0069742477,0.0032868867,0.0033507086,0.03946676,0.01900203,0.051007126,-0.03503395,-0.015224977,-0.0657877,-0.038151033,0.018590398,0.048247293,-0.017734194,0.013618796,-0.011228051,-0.027495103,-0.01646984,0.021418156,0.011947671,0.011280786,0.009071187,0.011022301,-0.00740613,-0.026490597,0.02094999,0.015823917,0.010481507,0.052649524,-0.008049814,-0.009660511,0.015285285,-0.023317004,-0.032141685,-0.0141309835,0.0025516157,-0.008489612,-0.05065143,-0.036714986,-0.034165103,0.06401238,0.038834564,0.04082576,0.04762129,0.013351277,-0.011312224,0.015604594,0.026153518,-0.05327802,-0.010012582,-0.008056695,0.043764997,-0.019072413,-0.016518464,-0.06247454,0.022830728,-0.04733936,0.028126,0.030039988,0.0034857106,-0.04215273,0.017144358,0.019704442,0.044806626,0.008275749,-0.020703958,0.016807288,0.010851178,0.056505203,-0.032621484,-0.029057086,-0.03627393,0.005923001,0.02195296,-0.02626489,-0.021272674,-0.012573151,-0.0019565907,-0.011830736,0.0029015862,0.030101871,0.006945403,-0.018144237,-0.010424801,0.008145534,0.00768958,-0.010075649,-0.0049200375,0.014742385,-0.009148623,-0.016426396,0.0008632573,0.003287248,0.021899141,0.017667646,-0.026322572,0.03407983,-0.002819585,-0.0020558208,0.0024421706,0.015158754,0.02960345,0.048315246,-0.006093753,-0.026784515,-0.073809296,-0.0003029289,-0.0110494755,-0.05642515,0.027562747,-0.00048443553,0.024707614,0.02912002,0.01728754,-0.033222903,0.045622777,-0.0052230316,-0.047821593,0.013161504,-0.04533044,0.010093598,0.0039106817,-0.015067739,0.05178352,-0.034537505,0.05209143,0.0027711059,-0.036751904,-0.003203969,-0.015066845,-0.020039754,0.0057422547,-0.024204807,0.026538016,0.0026805215,-0.01693096,0.0454705,0.015869595,0.026869768,-0.035293445,-0.0465726,0.03298155,0.05575229,-0.017316282,-0.001311179,0.028759712,-0.07984282,0.009618497,-0.04566901,0.061705455,-0.014668891,0.027312942,-0.059076402,0.0019201008,-0.0044061514,-0.01003891,-0.005233669,-0.002368375,0.033322677,0.023196243,-0.008697835,-0.02873561,-0.01757082,0.03207199,0.029188646,-0.024145313,-0.043466475,0.04921635,0.0057887645,0.023084514,0.014896417,-0.0025805656,-0.03159921,0.0033736243,0.032207135,-0.012167761,-0.009241846,-0.04347986,-0.03600847,0.008618748,0.027777469,0.0015502957,-0.06816971,0.014092198,-0.028971864,0.0112884855,-0.036570035,-0.006188728,-0.04397357,-0.0044004526,-0.032451723,0.03391674,0.009774675,0.01863427,0.016379898,0.034824975,0.018649302,0.021460038,-0.0038453492,-0.03633935,-0.016020993,0.03132443,0.003399252,0.012820904,-0.030871771,-0.0099764345,-0.048767287,0.022699362,0.036911674,0.0051042517,-0.029800924,-0.05034753,0.039740957,-0.029005833,0.01652009,-0.0076759076,0.026483424,-0.002848887,-0.012337939,-0.016025687,-0.030625993,-0.062282663,-0.058263186,-0.00020182665,-0.03645312,-0.04633982,-0.01862794,-0.016686864,0.051229335,-0.005271224,0.051409002,0.057411343,0.06652353,-0.0023316033,-0.022648336,0.0039100647,0.01146442,-0.025906172,-0.0053693214,-0.038934056,-0.048475325,-0.006704894,-0.023189956,-0.059601527,-0.02478922,0.039898455,0.006810865,-0.03831431,0.009689072,-0.026062455,-0.02023651,-0.022531569,0.033982985,-0.010432418,0.028601604,0.018241454,0.025966264,0.023969254,0.06634811,0.0066005588,-0.020754194,-0.026097482,0.058885098,0.013891223,-0.010968826,0.005201054,0.025539668,-0.06959737,-0.047833648,-0.00874153,-0.015861297,0.013138376,-0.069062226,-0.026901098,-0.07230736,-0.019497802,-0.031152181,0.035283115,0.031957574,0.011444083,0.015840042,-0.009785794,-0.020676235,-0.0069903415,0.070228584,-0.015860248,-0.0040602856,-0.03367818,-0.0105442135,-0.028262658,-0.004465731,0.018507503,0.01832803,0.019661626,0.0050932723,0.0035787395,0.073517196,0.020990318,0.01590508,-0.007733874,-0.015443985,-0.056251936,-0.038461566,0.0020857295,0.04118129,0.0060401857,-0.04696958,0.019172803,0.010307826,0.0069330777,-0.012484349,-0.030191323,-0.016159873,-0.061488267,0.01250571,-0.013789683,-0.027708812,-0.0038189383,-0.024073286,0.022009214,-0.030772112,0.023030581,0.0274844,0.0020730959,0.025090812,-0.01370102,0.0006236112,-0.014129326,-0.062615044,-0.051127043,-0.008917235,0.023079935,0.02054104,-0.02654784,0.0014100219,-0.0065308507,0.049370836,-0.036851976,-0.017679796,0.036772855,0.040822953,0.0007880716,0.0045366753,-0.03721407,0.0038658697,0.03226213,-0.040357187,0.00070370344,-0.025387947,-0.01069522,-0.026202887,0.02379065,-0.0019502827,0.021587696,-0.016330479,-0.008523762,0.036649294,-0.009755853,-0.006222691,0.02692428,0.016451597,-0.026146948,0.04060158,0.023117827,0.025791755,0.0099930195,0.040054776,0.011522145,-0.00048342047,-0.022819335,-0.00012848836,0.014348724,0.0017418546,0.019835817,-0.0046062474,0.025457049,-0.0065819826,-0.029834703,0.04980859,-0.03883607,0.022428613,-0.016995834,-0.017933974,-0.004520235,0.06346024,0.05444887,-0.0004308299,-0.006742339,-0.015150048,-0.016221676,0.021043953,-0.015049145,-0.029361252,-0.016419707,-0.06360994,0.037843082,-0.010926738,0.023654945,-0.0056755934,0.012740591,-0.028750852,0.0011550264,0.0016443266,0.025070522,0.026725635,-0.055952057,-0.012144488,0.04378323,0.03827793,-0.049619775,-0.06644331,0.0074727964,0.048964214,0.009225593,-0.019508077,-0.021381155,-0.01992256,-0.033392552,0.05147394,0.014133815,-0.02119208,-0.048772767,0.044518057,-0.03909373,0.043450184,-0.020842798,-0.008078156,0.013744501,0.0025367935,-0.016910715,0.049793866,0.04549155,-0.037517283,0.07259686,-0.0019456305,0.03854991,-0.027575457,-0.0056299246,-0.021133149,0.028387489,0.036703713,0.048209786,0.0030777876,0.022432419,0.030624075,0.004001455,0.027467145,0.032564674,0.013831314,0.003183261,-0.010818745,-0.011451513,-0.0015641515,0.0021757071,0.017133383,-0.02696958,-0.020824427,-0.024040323,-0.026605349,0.019550327,-0.0036248437,-0.011950877,0.04019913,0.0035916646,-0.033465527,0.026069133,0.020349067,-1.7695087E-05,0.013265382,0.013851443,0.025194671,-0.02085117,0.008971734,0.009370239,0.03134343,-0.017157106,-0.0012806233,0.055543564,-0.013598105,-0.044065796,-0.016372941,-0.02583651,0.018155469,-0.037308328,0.0086320955,-0.020833878,-0.04900378,-0.01615355,-0.05345992,0.005471893,-0.036800604,-0.033296995,0.060748488,0.017933695,-0.019378358,0.036806066,-0.030171204,0.053565484,-0.006057208,0.049233418,-0.0080190785,0.079202704,0.008309617,0.028957548,0.0044853464,-0.015548381,-0.03699846,0.0012098573,0.023204893,-0.002316985,0.009900723,-0.055592883,-0.05810836,0.0004144976,0.067086995,-0.012930051,-0.036808815,0.026287282,0.024957748,-0.06098039,-0.011050396,0.041419912,0.0037663532,0.027880155,-0.010092388,-0.043853708,-0.021880899,-0.051661756,-0.030669719,0.038545027,-0.0006305992,-0.0018599199,-0.015167975,-0.014759527,-0.03527928,-0.0006134971,0.021724744,0.02273034,0.024736665,0.034762025,0.021651082,0.02193052,-0.027438931,-0.07226747,0.043778732,0.054325163,-0.0053387666,0.0602835,0.032878593,0.043564826,0.01734414,0.05312367,-0.012704416,-0.0003017192,-0.00737069,0.015280429,-0.008260658,-0.009431836,-0.026364181,-0.026082696,0.046348862,-0.04630047,0.03695531,-0.024855096,-0.015158377,-0.05802382,-0.010074188,-0.05694032,0.00023163219,-0.01263221,-0.011306151,0.012818856,-0.01858039,0.21846122,0.03694062,0.07445295,0.04368515,0.036881763,0.090443715,0.012953247,-0.039442606,0.0127915,-0.06742305,0.017280122,0.006055445,0.03489296,0.015391922,-0.029377004,0.06346244,-0.062040504,0.0050312127,0.012788843,-0.0690763,-0.038938005,-0.008029327,0.0070567024,0.011892286,-0.01226591,-0.0060673133,0.016877022,-0.023006259,-0.045307677,-0.010501714,0.0046065063,0.0035508391,-0.007193072,-0.016922854,-0.013814192,0.06095789,0.038003657,-0.027232504,-0.03159363,0.010039674,-0.030128548,-0.05464106,-0.015081542,0.007011747,-0.014593583,0.023425007,0.008668609,0.0009925391,0.05574392,-0.06119889,0.04960845,-0.058183488,-0.021398578,-0.010764506,-0.036196724,-0.0043150117,-0.026778303,-0.006998313,-0.015072504,-0.006177553,0.030869624,-0.016126689,0.00355997,0.002554368,-0.041782063,0.014076932,-0.04780101,0.038762677,-0.026747236,-0.051052745,-0.003196159,-0.0050661424,0.011873565,0.026251677,0.025473539,0.013213654,0.012109193,0.04683072,-0.005802468,0.018796764,0.008391641,0.007398594,0.0066121956,0.019919677,0.044427704,0.0320257,-0.02540952,-0.03287225,-0.0014800356,0.009373968,-0.0049806586,0.074883215,-0.0214667,-0.007612756,0.010420754],"metadata":{"is_reference":false,"external_source_name":"","id":"_IrrationalEngine_IeCoreSilkNetOpenGl_Rendering_Renderer.cs","description":"","text":"using System.Numerics;\nusing System.Text;\nusing IeCoreInterfaces;\nusing IeCoreInterfaces.Assets;\nusing IeCoreInterfaces.Rendering;\nusing IeCoreInterfaces.SceneObjectComponents;\nusing IeCoreSilkNetOpenGl.EngineWindow;\nusing IeCoreSilkNetOpenGl.Helpers;\nusing IeUtils;\nusing Microsoft.Extensions.Logging;\nusing Silk.NET.OpenGL;\nusing Silk.NET.Windowing;\n\n\nnamespace IeCoreSilkNetOpenGl.Rendering;\n\npublic class Renderer: IRenderer\n{\n\tprivate static GL _gl;\n\t\n\tprivate static uint Vbo;\n\tprivate static uint Ebo;\n\tprivate static uint Vao;\n\tprivate static uint Shader;\n\n\tpublic IWindow window;\n\t\n\tprivate const string ModelObjectComponent = \u0022ModelSceneObjectComponent\u0022;\n\tprivate const string MaterialObjectComponent = \u0022MaterialSceneObjectComponent\u0022;\n\tprivate const string AnimationSceneObjectComponent = \u0022AnimationSceneObjectComponent\u0022;\n\tprivate readonly ISceneManager _sceneManager;\n\tprivate ISceneObjectComponent _materialObjectComponent;\n\tprivate ISceneObjectComponent _modelObjectComponent;\n\tprivate ISceneObjectComponent _animationObjectComponent;\n\tprivate readonly IAssetManager _assetManager;\n\tprivate readonly ILogger\u003CRenderer\u003E _logger;\n\t\n\tprivate Matrix4x4 _projection;\n\tprivate Matrix4x4 _view;\n\tprivate ISceneObjectComponent _camera;\n\t\n\tprivate int _width = 600, _height = 600;\n\n\tpublic Renderer(ISceneManager sceneManager, IAssetManager assetManager, ILogger\u003CRenderer\u003E logger)\n\t{\n\t\tsceneManager.AssertNotNull(nameof(sceneManager));\n\t\tlogger.AssertNotNull(nameof(logger));\n\t\tassetManager.AssertNotNull(nameof(assetManager));\n\t\t_sceneManager = sceneManager;\n\t\t_logger = logger;\n\t\t_assetManager = assetManager;\n\t}\n\n\t/*\n\t//Vertex shaders are run on each vertex.\n\tprivate static readonly string VertexShaderSource = @\u0022\n        #version 330 core //Using version GLSL version 3.3\n        layout (location = 0) in vec4 vPos;\n        \n        void main()\n        {\n            gl_Position = vec4(vPos.x, vPos.y, vPos.z, 1.0);\n        }\n        \u0022;\n\n\t//Fragment shaders are run on each fragment/pixel of the geometry.\n\tprivate static readonly string FragmentShaderSource = @\u0022\n        #version 330 core\n        out vec4 FragColor;\n\n        void main()\n        {\n            FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\n        }\n        \u0022;\n\n\t//Vertex data, uploaded to the VBO.\n\tprivate static readonly float[] Vertices =\n\t{\n\t\t//X    Y      Z\n\t\t0.5f,  0.5f, 0.0f,\n\t\t0.5f, -0.5f, 0.0f,\n\t\t-0.5f, -0.5f, 0.0f,\n\t\t-0.5f,  0.5f, 0.5f\n\t};\n\n\t//Index data, uploaded to the EBO.\n\tprivate static readonly uint[] Indices =\n\t{\n\t\t0, 1, 3,\n\t\t1, 2, 3\n\t};*/\n\t\n\t\n        public unsafe void OnLoad()\n        {   \n\t        _gl = SilkNetOpenGlWindow.GetWindowContext;\n\t\t\t_gl.Enable(EnableCap.DepthTest);\n\t\t\t_gl.ClearColor(0.6f, 0.3f, 0.3f, 1.0f);\n\t\t\t\n\t\t\t//Generate textures\n\t\t\tforeach (IeCoreEntities.Materials.Texture texture in _assetManager.RetrieveAll\u003CIeCoreEntities.Materials.Texture\u003E())\n\t\t\t{\n\t\t\t\ttexture.Id = (int)_gl.GenTexture();\n\t\t\t}\n\n\t\t\tforeach (ISceneObject sceneObject in _sceneManager.Scene.SceneObjects)\n\t\t\t{\n\t\t\t\t//Find model component in scene object.\n\t\t\t\tif (sceneObject.Components.TryGetValue(ModelObjectComponent, out _modelObjectComponent))\n\t\t\t\t{\n\t\t\t\t\t//Get model from scene object.\n\t\t\t\t\tIModelComponent currentModelComponent = (IModelComponent) _modelObjectComponent;\n\t\t\t\t\t//Generate VAO on OGL side and assign id of that buffer to model.\n\t\t\t\t\tcurrentModelComponent.Model.VertexArrayObjectId = (int) _gl.GenVertexArray();\n\t\t\t\t\t_gl.BindVertexArray((uint) currentModelComponent.Model.VertexArrayObjectId);\n\t\t\t\t\t//Generate buffer on OGL side and assign id of that buffer to model.\n\t\t\t\t\tcurrentModelComponent.Model.VertexBufferObjectId = (int) _gl.GenBuffer();\n\t\t\t\t\t//Generate buffer on OGL side and assign id of that buffer to model.\n\t\t\t\t\tcurrentModelComponent.Model.ElementBufferId = (int) _gl.GenBuffer();\n\n\t\t\t\t\t//Get all vertices from model.\n\t\t\t\t\tfloat[] vboPositionData = currentModelComponent.GetVboPositionDataOfModel();\n\t\t\t\t\tuint[] indexes = currentModelComponent.GetIndexesOfModel();\n\n\t\t\t\t\tvar sb = new StringBuilder(\u0022Vertex coordinates: \u0022);\n\t\t\t\t\tsb.Append(currentModelComponent.Model.Name);\n\t\t\t\t\tforeach (float posData in vboPositionData)\n\t\t\t\t\t{\n\t\t\t\t\t\tsb.Append(\u0027 \u0027);\n\t\t\t\t\t\tsb.Append(posData);\n\t\t\t\t\t}\n\n\t\t\t\t\t_logger.LogTrace(sb.ToString());\n\t\t\t\t\t//Load indices data to GPU.\n\t\t\t\t\t_gl.BindBuffer(GLEnum.ElementArrayBuffer, (uint) currentModelComponent.Model.ElementBufferId);\n\t\t\t\t\tfixed (void* i = \u0026indexes[0])\n\t\t\t\t\t{\n\t\t\t\t\t\t_gl.BufferData(GLEnum.ElementArrayBuffer, (nuint) (indexes.Length * sizeof(uint)), i,\n\t\t\t\t\t\t\tGLEnum.StaticDraw);\n\t\t\t\t\t}\n\n\t\t\t\tif (sceneObject.Components.TryGetValue(MaterialObjectComponent, out _materialObjectComponent))\n\t\t\t\t{\n\t\t\t\t\t//Get material from scene object.\n\t\t\t\t\tvar currentMaterialComponent = (IMaterialComponent)_materialObjectComponent;\n\t\t\t\t\tIeCoreEntities.Materials.Texture texture = currentMaterialComponent.Materials.FirstOrDefault().Value.DiffuseTexture;\n\t\t\t\t\t\n\t\t\t\t\t_gl.ActiveTexture(TextureUnit.Texture0);\n\t\t\t\t\t_gl.BindTexture(TextureTarget.Texture2D, (uint)texture.Id);\n\t\t\t\t\t\n\t\t\t\t\tfixed (byte* ptr = \u0026texture.Bytes[0])\n\t\t\t\t\t{\n\t\t\t\t\t\t_gl.TexImage2D(TextureTarget.Texture2D,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tInternalFormat.Srgb8,\n\t\t\t\t\t\t\t(uint) texture.TextureSize.X,\n\t\t\t\t\t\t\t(uint) texture.TextureSize.Y,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tPixelFormat.Bgra,\n\t\t\t\t\t\t\tPixelType.UnsignedByte,\n\t\t\t\t\t\t\tptr);\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.GenerateMipmap(TextureTarget.Texture2D);\n\n\n\t\t\t\t\t//Bind created buffer to ArrayBuffer target.\n\t\t\t\t\t_gl.BindBuffer(GLEnum.ArrayBuffer, (uint)currentModelComponent.Model.VertexBufferObjectId);\n\n\t\t\t\t\t//Load model data to GPU.\n\t\t\t\t\tfixed (float* positionData = \u0026vboPositionData[0])\n\t\t\t\t\t{\n\t\t\t\t\t\t_gl.BufferData(GLEnum.ArrayBuffer, (nuint) (vboPositionData.Length * sizeof(float)), positionData,\n\t\t\t\t\t\t\tGLEnum.StaticDraw);\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.VertexAttribPointer((uint)currentMaterialComponent.ShaderProgram.GetAttributeAddress(\u0022aPosition\u0022),\n\t\t\t\t\t\t3, VertexAttribPointerType.Float, false, 0, null);\n\t\t\t\t\t\n\t\t\t\t\tif (currentMaterialComponent.ShaderProgram.GetAttributeAddress(\u0022aTexCoord\u0022) != -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat[] vboTextureData = currentModelComponent.GetVboTextureDataOfModel();\n\t\t\t\t\t\t_gl.BindBuffer(GLEnum.ArrayBuffer, currentMaterialComponent.ShaderProgram.GetBuffer(\u0022aTexCoord\u0022));\n\t\t\t\t\t\tfixed (void* textureData = \u0026vboTextureData[0])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_gl.BufferData(GLEnum.ArrayBuffer, (uint)(vboTextureData.Length * sizeof(float)), textureData,\n\t\t\t\t\t\t\t\tGLEnum.StaticDraw);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.VertexAttribPointer((uint)currentMaterialComponent.ShaderProgram.GetAttributeAddress(\u0022aTexCoord\u0022),\n\t\t\t\t\t\t\t2, VertexAttribPointerType.Float, false, 0, null);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\t_projection = Matrix4x4.CreatePerspectiveFieldOfView(1.3f, _width / (float)_height, 0.1f, 120.0f);\n\t\t\t\t}\n\t\t\t}\n\n/*            //Creating a vertex array.\n            Vao = Gl.GenVertexArray();\n            Gl.BindVertexArray(Vao);\n\n            //Initializing a vertex buffer that holds the vertex data.\n            Vbo = Gl.GenBuffer(); //Creating the buffer.\n            Gl.BindBuffer(BufferTargetARB.ArrayBuffer, Vbo); //Binding the buffer.\n            fixed (void* v = \u0026Vertices[0])\n            {\n                Gl.BufferData(BufferTargetARB.ArrayBuffer, (nuint) (Vertices.Length * sizeof(uint)), v, BufferUsageARB.StaticDraw); //Setting buffer data.\n            }\n\n            //Initializing a element buffer that holds the index data.\n            Ebo = Gl.GenBuffer(); //Creating the buffer.\n            Gl.BindBuffer(BufferTargetARB.ElementArrayBuffer, Ebo); //Binding the buffer.\n            fixed (void* i = \u0026Indices[0])\n            {\n                Gl.BufferData(BufferTargetARB.ElementArrayBuffer, (nuint) (Indices.Length * sizeof(uint)), i, BufferUsageARB.StaticDraw); //Setting buffer data.\n            }\n\n            //Creating a vertex shader.\n            uint vertexShader = Gl.CreateShader(ShaderType.VertexShader);\n            Gl.ShaderSource(vertexShader, VertexShaderSource);\n            Gl.CompileShader(vertexShader);\n\n            //Checking the shader for compilation errors.\n            string infoLog = Gl.GetShaderInfoLog(vertexShader);\n            if (!string.IsNullOrWhiteSpace(infoLog))\n            {\n                Console.WriteLine($\u0022Error compiling vertex shader {infoLog}\u0022);\n            }\n\n            //Creating a fragment shader.\n            uint fragmentShader = Gl.CreateShader(ShaderType.FragmentShader);\n            Gl.ShaderSource(fragmentShader, FragmentShaderSource);\n            Gl.CompileShader(fragmentShader);\n\n            //Checking the shader for compilation errors.\n            infoLog = Gl.GetShaderInfoLog(fragmentShader);\n            if (!string.IsNullOrWhiteSpace(infoLog))\n            {\n                Console.WriteLine($\u0022Error compiling fragment shader {infoLog}\u0022);\n            }\n\n            //Combining the shaders under one shader program.\n            Shader = Gl.CreateProgram();\n            Gl.AttachShader(Shader, vertexShader);\n            Gl.AttachShader(Shader, fragmentShader);\n            Gl.LinkProgram(Shader);\n\n            //Checking the linking for errors.\n            Gl.GetProgram(Shader, GLEnum.LinkStatus, out var status);\n            if (status == 0)\n            {\n                Console.WriteLine($\u0022Error linking shader {Gl.GetProgramInfoLog(Shader)}\u0022);\n            }\n\n            //Delete the no longer useful individual shaders;\n            Gl.DetachShader(Shader, vertexShader);\n            Gl.DetachShader(Shader, fragmentShader);\n            Gl.DeleteShader(vertexShader);\n            Gl.DeleteShader(fragmentShader);\n\n            //Tell opengl how to give the data to the shaders.\n            Gl.VertexAttribPointer(0, 3, VertexAttribPointerType.Float, false, 3 * sizeof(float), null);\n            Gl.EnableVertexAttribArray(0);*/                  \n        }\n\n        public unsafe void OnRender() //Method needs to be unsafe due to draw elements.\n        {\n\t        _gl.Clear((uint) ClearBufferMask.ColorBufferBit);\n\t      //  _gl.CullFace(TriangleFace.Back);\n\t        \n\t        foreach (ISceneObject sceneObject in _sceneManager.Scene.SceneObjects.ToList())\n\t\t\t{\n\t\t\t\tif (sceneObject.Components.TryGetValue(\u0022Camera\u0022, out _camera))\n\t\t\t\t{\n\t\t\t\t\tvar camera = (ICamera)_camera;\n\t\t\t\t\t_view = camera.GetViewMatrix();\n\t\t\t\t}\n\t\t\t\tIMaterialComponent currentMaterialComponent = null;\n\t\t\t\tif (sceneObject.Components.TryGetValue(MaterialObjectComponent, out _materialObjectComponent))\n\t\t\t\t{\n\t\t\t\t\t//Get material from scene object.\n\t\t\t\t\tcurrentMaterialComponent = (IMaterialComponent)_materialObjectComponent;\n\t\t\t\t\tcurrentMaterialComponent.ShaderProgram.EnableVertexAttribArrays();\n\t\t\t\t\tIeCoreEntities.Materials.Texture texture = currentMaterialComponent.Materials.FirstOrDefault().Value.DiffuseTexture;\n\n\t\t\t\t\tUniformHelper.TryAddUniformTexture2D(_gl, texture.Id, \u0022texture0\u0022, currentMaterialComponent.ShaderProgram, TextureUnit.Texture0);\n\n\t\t\t\t\tcurrentMaterialComponent.ShaderProgram.UseProgram();\n\n\t\t\t\t\tUniformHelper.TryAddUniform(_gl, currentMaterialComponent.Materials.FirstOrDefault().Value.DiffuseColor,\n\t\t\t\t\t\t\u0022Color\u0022,\n\t\t\t\t\t\tcurrentMaterialComponent.ShaderProgram);\n\t\t\t\t}\n\n\t\t\t\t//Get all vertices from model.\n\t\t\t\tif (sceneObject.Components.TryGetValue(ModelObjectComponent, out _modelObjectComponent))\n\t\t\t\t{\n\t\t\t\t\t//Get model from scene object.\n\t\t\t\t\tvar currentModelComponent = (IModelComponent)_modelObjectComponent;\n\n\t\t\t\t\t_gl.BindVertexArray((uint)currentModelComponent.Model.VertexArrayObjectId);\n\t\t\t\t\t_gl.BindBuffer(GLEnum.ElementArrayBuffer, (uint)currentModelComponent.Model.ElementBufferId);\n\n\n\t\t\t\t\tMatrix4x4 modelMatrix = currentModelComponent.Model.Meshes.FirstOrDefault().Transform.ModelMatrix;\n\t\t\t\t\tMatrix4x4 proj = _projection;\n\t\t\t\t\tMatrix4x4 view = _view;\n\t\t\t\t\t_gl.UniformMatrix4(currentMaterialComponent.ShaderProgram.GetUniformAddress(\u0022model\u0022), 1, false, (float*) \u0026modelMatrix);\n\t\t\t\t\t_gl.UniformMatrix4(currentMaterialComponent.ShaderProgram.GetUniformAddress(\u0022projection\u0022), 1, false, (float*) \u0026proj);\n\t\t\t\t\t_gl.UniformMatrix4(currentMaterialComponent.ShaderProgram.GetUniformAddress(\u0022view\u0022), 1, false, (float*) \u0026view);\n\n\t\t\t\t\t// Bind the VAO\n\t\t\t\t\t_gl.BindVertexArray((uint)currentModelComponent.Model.VertexArrayObjectId);\n\n\t\t\t\t\t_gl.DrawElements(PrimitiveType.Triangles, (uint)currentModelComponent.GetIndexesOfModel().Length, DrawElementsType.UnsignedInt,\n\t\t\t\t\t\tnull);\n\t\t\t\t}\n\t\t\t}\n            //Clear the color channel.\n            \n/*\n            //Bind the geometry and shader.\n            _gl.BindVertexArray(Vao);\n            _gl.UseProgram(Shader);\n\n            //Draw the geometry.\n            _gl.DrawElements(PrimitiveType.Triangles, (uint) Indices.Length, DrawElementsType.UnsignedInt, null);\n            */\n        }\n\n\n\n\tpublic void OnResized()\n\t{\n\t\t//throw new NotImplementedException();\n\t}\n\n\tpublic void OnUpdated()\n\t{\n\t\t//throw new NotImplementedException();\n\t}\n\n\tpublic void OnUnload()\n\t{\n\t\t//throw new NotImplementedException();\n\t}\n\n\tpublic void SetContext\u003CT\u003E(T context)\n\t{\n\t\tthrow new NotImplementedException();\n\t}\n\n\tpublic void SetViewPort(int width, int height)\n\t{\n\t\t//throw new NotImplementedException();\n\t}\n}","additional_metadata":""},"key":"_IrrationalEngine_IeCoreSilkNetOpenGl_Rendering_Renderer.cs","timestamp":null}